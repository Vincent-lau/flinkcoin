version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    hostname: 'kafka1'
    ports:
      - "9092"
      - "9094:9094"
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "coinbase:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "kafka1"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "PLAINTEXT://kafka1:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - kafka

  producer:
    build: ./producer
    environment:
      KAFKA_BROKER: "kafka1:9092"
      KAFKA_TOPIC: "coinbase"
      NODE_ENV: "production"
    depends_on:
      - kafka


  jobmanager:
    image: pyflink
    # image: flink:latest
    ports:
      - "8081:8081"
      - "9249:9249"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager        

  taskmanager:
    image: pyflink
    ports:
      - "9250:9249"
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2   
    
  # qdb:
  #   image: questdb/questdb:latest
  #   ports:
  #     - "9000:9000"
  #     - "8812:8812"
  #     - "9009:9009"
  #   volumes:
  #     - ./docker/qdb-data:/var/lib/questdb

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - ./docker/influxdb-data:/var/lib/influxdb2
      - ${PWD}/docker/influxdb-data/config.yml:/etc/influxdb2/config.yml 
    environment:
      - DOCKER_INFLUCDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=vincent
      - DOCKER_INFLUXDB_INIT_PASSWORD=20040209
      - DOCKER_INFLUXDB_INIT_ORG=r244
      - DOCKER_INFLUXDB_INIT_BUCKET=coinbase
    depends_on:
      - jobmanager
      - taskmanager
    
  # elasticsearch:
  #   image: elasticsearch:8.6.0
  #   container_name: es01
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - discovery.type=single-node
  #     - ELASTIC_PASSWORD=20040209

  # kibana:
  #   image: kibana:8.6.0
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=elastic
  #     - ELASTICSEARCH_PASSWORD=20040209
  #   depends_on:
  #     - elasticsearch

  grafana:
    image: grafana/grafana:8.2.6
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - influxdb

      
    # volumes:
    #   - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    #   - ./docker/grafana/dashboard.json:/etc/grafana/dashboard.json
    #   - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini


  # consumer:
  #   build: ./consumer
  #   environment:
  #     KAFKA_BROKER: "kafka1:9092"
  #     KAFKA_TOPIC: "coinbase"
  #   depends_on:
  #     - kafka
  #     - producer
